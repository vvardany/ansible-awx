---
#  - name: "Check reboot privilege"
#    command: sudo -l
#    register: sudo
#  - debug: msg="{{ sudo.stdout }}"
#  - fail: msg="Reboot privilege missing!"
#    when: not(sudo.stdout.find('reboot') != -1)
#
##########################################################################

  - name: "Stopping httpd"
    service: 
      name: httpd 
      state: stopped

  - name: "Installing updates using yum"
    yum:
      name: "*"
      state: latest
      update_only: "yes"
    register: update_result

##########################################################################

  - block:
      - name: "Reboot if there was a change"
        shell: "sleep 5 && reboot"
        async: 1
        poll: 0

      - name: "Wait for the reboot"
        wait_for_connection:
          connect_timeout: 20
          sleep: 5
          delay: 5
          timeout: 300
    when: 
      - update_result is changed
      - ansible_uptime_seconds > 86400

##########################################################################

  - name: "Check server uptime"
    shell: "uptime | awk '{print $3,$4}'"
    register: uptime

  - name: "Print uptime"
    debug:
      msg: "{{ uptime.stdout }}"

  - name: "Starting httpd"
    service: 
      name: httpd 
      state: started

  - name: "Make sure HTTP is running before proceeding"
    wait_for: 
      host: 0.0.0.0 
      port: 80 
      delay: 3 
      timeout: 300


### For Testing purposes 
- name: Pinging from Ansible server to {{ inventory_hostname }}
  shell: hostname && ping -c 3 {{ ansible_default_ipv4.address }}
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: localhost 

- name: Printing some text here
  debug:
    msg: "{{ update_result.results }}"
  when: inventory_hostname == ansible_play_hosts[0]
    
- name: Echo some variable
  shell: echo "{{ some_var }}" | tee /tmp/some_var_file

- debug: msg="Cheking some_var is Hello"
  when: some_var == "Hello"
- fail: msg="Cheking some_var is not Hello"
  when: some_var != "Hello"

